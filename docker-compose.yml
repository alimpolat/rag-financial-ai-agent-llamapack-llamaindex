version: '3.8'

services:
  # Ollama service for local LLM
  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=http://localhost:3000,http://localhost:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Python FastAPI backend
  python-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-backend
    container_name: rag-python-backend
    ports:
      - "8000:8000"
    volumes:
      - ./storage:/app/storage
      - ./.env.local:/app/.env.local:ro
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - STORAGE_ROOT=/app/storage
      - INDEX_DIR=/app/storage/index
      - UPLOAD_DIR=/app/storage/uploads
      - PY_HOST=0.0.0.0
      - PY_PORT=8000
    depends_on:
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Next.js frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: rag-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./.env.local:/app/.env.local:ro
    environment:
      - NODE_ENV=production
      - PY_BACKEND_URL=http://python-backend:8000
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      python-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: rag-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates if available
    depends_on:
      - frontend
      - python-backend
    restart: unless-stopped
    profiles:
      - production  # Only run in production profile

volumes:
  ollama_data:
    driver: local

networks:
  default:
    name: rag-network

